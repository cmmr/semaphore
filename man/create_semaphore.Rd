% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semaphore.r
\name{create_semaphore}
\alias{create_semaphore}
\alias{increment_semaphore}
\alias{decrement_semaphore}
\alias{remove_semaphore}
\title{Shared Memory Atomic Operations}
\usage{
create_semaphore(value = 0)

increment_semaphore(semaphore)

decrement_semaphore(semaphore, wait = TRUE)

remove_semaphore(semaphore)
}
\arguments{
\item{value}{The initial value of the semaphore.}

\item{semaphore}{A semaphore identifier, as generated by \code{create_semaphore()}.}

\item{wait}{If \code{TRUE}, blocks until semaphore is greater than zero.}
}
\value{
\itemize{
\item \code{create_semaphore()} - A semaphore identifier (string).
\item \code{increment_semaphore()} - \code{NULL}, invisibly.
\item \code{decrement_semaphore()} - \code{TRUE} on success; \code{FALSE} otherwise.
\item \code{remove_semaphore()} - \code{TRUE} on success; \code{FALSE} on error.
}
}
\description{
A semaphore is an integer that the operating system keeps track of.
Any process that knows the semaphore's identifier can increment or
decrement its value, though it cannot be decremented below zero.\cr\cr
When the semaphore is zero, calling \code{decrement_semaphore(wait = FALSE)}
will return \code{FALSE} whereas \code{decrement_semaphore(wait = TRUE)} will
block until the semaphore is incremented by another process.
If multiple processes are blocked, a single call to increment will
only unblock one of the blocked processes.
}
\examples{

    library(semaphore) 
    
    s <- create_semaphore()
    print(s)
    
    increment_semaphore(s)
    decrement_semaphore(s, wait = FALSE)
    decrement_semaphore(s, wait = FALSE)
    
    remove_semaphore(s)
}
